# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    admin.article:
        class: App\Admin\ArticleAdmin
        arguments: [~, App\Entity\Article,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Articles", label: "Articles"}
            
    admin.classement:
        class: App\Admin\ClassementAdmin
        arguments: [~,App\Entity\Classement,~]
        tags:
            - {name: sonata.admin, manager_type: orm, group: "Compétition", label: "Classement"}
            
    admin.journee:
        class: App\Admin\JourneeAdmin
        arguments: [~, App\Entity\Journee,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Compétition", label: "Journées"}
            
    admin.compo:
        class: App\Admin\AssoJoueurJourneeAdmin
        arguments: [~, App\Entity\AssoJoueurJournee, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, group: "Compétition", label: "Compositions/stats Matchs" }
            
    admin.tags:
        class: App\Admin\TagsAdmin
        arguments: [~, App\Entity\Tags,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Articles", label: "Tags"}
    
    admin.equipe:
        class: App\Admin\EquipeAdmin
        arguments: [~, App\Entity\Equipe,~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Equipes/Joueurs", label: "Equipes"}
            
    admin.joueur:
        class: App\Admin\JoueurAdmin
        arguments: [~, App\Entity\Joueur, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Equipes/Joueurs", label: "Joueurs"}
            
    admin.saison:
        class: App\Admin\SaisonAdmin
        arguments: [~, App\Entity\Saison,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Autres", label: "Saisons"}
            
    admin.arbitre:
        class: App\Admin\ArbitreAdmin
        arguments: [~, App\Entity\Arbitre,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Autres", label: "Arbitres"}
            
    admin.palmares:
        class: App\Admin\PalmaresAdmin
        arguments: [~, App\Entity\Palmares,~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "Palmarès"}
            
    admin.poste:
        class: App\Admin\PosteAdmin
        arguments: [~, App\Entity\Poste,~]
        tags:
            - { name: sonata.admin, manager_type: orm,group: "Autres", label: "Postes"}
    
    admin.assoJoueurEquipe:
        class: App\Admin\AssoJoueurEquipeAdmin
        arguments: [~, App\Entity\AssoJoueurEquipe, ~]
        tags:
            - {name: sonata.admin, manager_type: orm, group: "Equipes/Joueurs", label: "Joueurs/Equipes"}
    #sonata.block.service.rss:
     #   class: Sonata\BlockBundle\Block\Service\RssBlockService
      #  arguments: [~, '@twig']
       # tags:
        #    - { name: sonata.block }
    
    
    
